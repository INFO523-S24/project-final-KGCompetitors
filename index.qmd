---
title: "Personal Data Detection"
subtitle: "INFO 523 - Project Final"
author: 
  - name: "KG Competitors"
    affiliations:
      - name: "School of Information, University of Arizona"
description: "Our team is participating in a Kaggle Competition with the higher objective being to create a model capable of detecting personally identifiable information (PII) within student writing, and a secondary goal of evaluating and comparing our models for efficiency to identify the best model."
format:
   html:
    code-tools: true
    code-overflow: wrap
    embed-resources: true
editor: visual
execute:
  warning: false
  echo: false
jupyter: python3
---

## Abstract

Our team is participating in a Kaggle competition in which the primary goal is to develop a model capable of detecting personally identifiable information (PII) in student writing. PII creates significant obstacles to the analysis and creation of publicly accessible datasets designed to enhance education, as sharing such data could expose students to potential risks. To address these risks, educational data must be thoroughly screened and cleansed of PII before it is publicly released, a task that could be optimized with data science techniques. 
Typically, text classification tasks involve categorizing entire sentences. However, our task focuses on word-level classification, where each word in a text belongs to one of several predefined categories, akin to a multiclass classification problem. This approach is commonly known as 'Named Entity Recognition'. Our process involved creating and running three DeBERTa models of various sizes (extra small, small, and large) to solve the Kaggle objective, while being able to compare our three models and determine which one works best.

## Questions

1. Can we develop a model that successfully detects personally identifiable information (PII) in student writing?
2. How can we evaluate the model's performance effectively? Which metrics are most appropriate for PII detection tasks? 

## Dataset

- **Dataset Used**: [The Learning Agency Lab - PII Data Detection](https://www.kaggle.com/competitions/pii-detection-removal-from-educational-data/data)
- **Description**: Contains annotations for named entities (word categories) across 13 categories.
- **Preprocessing**: The text is tokenized using DeBERTa's tokenizer to ensure that named entities are correctly identified and segmented.


## Analysis Plan

- **Methodology**:
  1. **Tokenization**: Tokenize the raw text using the appropriate DeBERTa tokenizer.
  2. **Fine-Tuning**: Model are be fine-tuned on the same training set with a very small learning rate 6e-6. KerasNLP python package was used with JAX backed. Models were fine tuned on a Nvidia 4070Ti GPU.
  3. **Evaluation**: Assessed each model's performance on the validation set F5-score. In the F5 score, recall is considered five times as important as precision. This means the F5 score is particularly useful in our case where missing out on positive cases (false negatives) is much more problematic than incorrectly labeling negative cases as positive (false positives) since there is a huge class imbalance.
  4. **Comparison**: Compared the performance and resource utilization of each model.


### Model 1: Extra Small DeBERTa 
- **Configuration**: [DeBERTa-v3 Extra Small](https://huggingface.co/microsoft/deberta-v3-xsmall) - a 70.68 Million parameter model.
- **Training Details**: Tuned with a smaller batch size due to resource constraints, focusing on maximizing model efficiency.
- **Expected Advantage**: Lower computational requirements, making it suitable for environments with strict resource limitations.

### Model 2: Small DeBERTa
- **Configuration**: [DeBERTa-v3 Small](https://huggingface.co/microsoft/deberta-v3-small) - a 141.30 Million parameter model.
- **Training Details**: Balance between computational demand and performance, using a moderate batch size and learning rate.
- **Expected Advantage**: Expected to perform better than the extra small model with manageable resource use.

### Model 3: Large DeBERTa
- **Configuration**: [DeBERTa-v3 Large](https://keras.io/api/keras_nlp/models/deberta_v3) - a 434.01  Million parameter model
- **Training Details**: Utilizes larger batch sizes and more extended training periods to exploit the model's capacity fully.
- **Expected Advantage**: Highest accuracy and performance, suitable for scenarios where computational resources are less of a constraint.


## Results & Conclusion
- **Performance Analysis**:
  - The **Extra Small DeBERTa** model offers the fastest inference time but at the cost of lower F5 score.
  - The **Small DeBERTa** model provides a balanced performance with reasonable inference times and improved F5 Score over the extra small variant.
  - The **Large DeBERTa** model achieves the highest F5 score, reflecting its larger model capacity and outperformance.
- **Conclusion**:
  - The choice of model depends on the specific needs for efficiency and performance. For limited-resource environments, the Extra Small or Small models are recommended. For maximum accuracy, where resources are plentiful, the Large model is the best choice.



# References

\[1\] Our Kaggle Competition Info can be found here: <https://www.kaggle.com/competitions/pii-detection-removal-from-educational-data/overview>
